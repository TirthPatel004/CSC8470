@model JobPortal.Models.CompanyDashboardModel

@{
    ViewData["Title"] = "Company Dashboard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <!-- Bootstrap CSS CDN -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <!-- Custom CSS -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>
        /* Sidebar Styles */
       .sidebar {
    position: fixed;
    left: 0;
    z-index: 100;
    height: 70%;
    max-width: 250px;
    background-color: #f8f9fa;
    color: #343a40;
    padding: 20px;
    transition: all 0.3s;
    overflow-y: auto;
    border-right: 1px solid #dee2e6;
    margin: 0; /* Remove margins */
}
        .sidebar:hover {
            max-width: 300px;
        }
        .sidebar h2 {
            font-size: 1.5rem;
            margin-bottom: 20px;
            font-weight: bold;
        }
        .sidebar a {
            display: block;
            padding: 10px;
            margin-bottom: 5px;
            color: #343a40;
            text-decoration: none;
            border-radius: 4px;
            transition: background-color 0.3s, color 0.3s;
        }
        .sidebar a:hover {
            background-color: #e9ecef;
            color: #495057;
        }
        .sidebar .active {
            background-color: #007bff;
            color: #fff;
        }
        .content {
            margin-left: 270px;
            padding: 20px;
        }
        .form-label {
            font-weight: bold;
        }
        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }
        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }
        .table {
            margin-top: 20px;
        }
        .table thead th {
            background-color: #e9ecef;
            color: #495057;
        }
        .table tbody tr:hover {
            background-color: #f1f1f1;
        }
        .collapse.show {
            display: block;
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="mt-3 sidebar">
        <h2>@ViewData["Title"]</h2>
        <a href="#company-info" class="active" data-bs-toggle="collapse">Company Information</a>
        <a href="#jobs" data-bs-toggle="collapse">Jobs Posted</a>
        <a href="#applications" data-bs-toggle="collapse">Applications Received</a>
        <a href="#post-job" data-bs-toggle="collapse">Post a Job</a>
    </div>

   <!-- Main Content -->
<div class="container content mt-4">
    <div id="company-info" class="collapse show">
        <h2>Company Information</h2>
        <dl class="row">
            <dt class="col-sm-3">Company ID:</dt>
            <dd class="col-sm-9" id="companyIdDisplay"></dd>
            <dt class="col-sm-3">Name:</dt>
            <dd class="col-sm-9" id="companyName"></dd>
            <dt class="col-sm-3">Address:</dt>
            <dd class="col-sm-9" id="companyAddress"></dd>
            <dt class="col-sm-3">Website:</dt>
            <dd class="col-sm-9" id="companyWebsite"></dd>
        </dl>
    </div>

    <div id="jobs" class="collapse">
        <h2>Jobs Posted</h2>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Job Title</th>
                    <th scope="col">Location</th>
                    <th scope="col">Posted Date</th>
                </tr>
            </thead>
            <tbody id="jobsTableBody">
            </tbody>
        </table>
    </div>

    <div id="applications" class="collapse">
        <h2>Applications Received</h2>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Job Title</th>
                    <th scope="col">Applicant Email</th>
                    <th scope="col">Applied Date</th>
                </tr>
            </thead>
            <tbody id="applicationsTableBody">
            </tbody>
        </table>
    </div>

        <div id="post-job" class="collapse">
            <h2>Post a Job</h2>
            <form id="postJobForm">
                <div class="mb-3">
                    <label for="companyIdInput" class="form-label">Company ID</label>
                    <input type="text" class="form-control" id="companyIdInput" required>
                </div>
                <div class="mb-3">
                    <label for="jobTitle" class="form-label">Job Title</label>
                    <input type="text" class="form-control" id="jobTitle" required>
                </div>
                <div class="mb-3">
                    <label for="jobLocation" class="form-label">Location</label>
                    <input type="text" class="form-control" id="jobLocation" required>
                </div>
                <div class="mb-3">
                    <label for="jobDescription" class="form-label">Description</label>
                    <textarea class="form-control" id="jobDescription" rows="3" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Post Job</button>
            </form>
        </div>

</div>

    <!-- Bootstrap JS CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom JavaScript -->
    <script>
        // document.addEventListener('DOMContentLoaded', function () {
        //     // Fetch and populate dashboard data on page load
        //     fetchCompanyDashboard();

        //     async function fetchCompanyDashboard() {
        //         try {
        //             const response = await fetch('/api/company/dashboard');
        //             if (!response.ok) {
        //                 throw new Error('Failed to fetch dashboard data');
        //             }
        //             const data = await response.json();

        //             // Validate data
        //             if (!data || !data.company || !Array.isArray(data.jobs) || !Array.isArray(data.applications) || !Array.isArray(data.users)) {
        //                 throw new Error('Invalid data structure');
        //             }

        //             // Populate Company Information
        //             document.getElementById('companyName').textContent = data.company.name || 'N/A';
        //             document.getElementById('companyAddress').textContent = data.company.address || 'N/A';
        //             document.getElementById('companyWebsite').textContent = data.company.website || 'N/A';

        //             // Populate Jobs Table
        //             const jobsTableBody = document.getElementById('jobsTableBody');
        //             jobsTableBody.innerHTML = '';
        //             data.jobs.forEach(job => {
        //                 const row = `<tr>
        //                     <td>${job.title || 'N/A'}</td>
        //                     <td>${job.location || 'N/A'}</td>
        //                     <td>${new Date(job.postedDate).toLocaleDateString() || 'N/A'}</td>
        //                 </tr>`;
        //                 jobsTableBody.innerHTML += row;
        //             });

        //             // Populate Applications Table
        //             const applicationsTableBody = document.getElementById('applicationsTableBody');
        //             applicationsTableBody.innerHTML = '';
        //             data.applications.forEach(app => {
        //                 const jobTitle = data.jobs.find(job => job.id === app.jobId)?.title || 'Unknown';
        //                 const userEmail = data.users.find(user => user.id === app.userId)?.email || 'Unknown';
        //                 const row = `<tr>
        //                     <td>${jobTitle}</td>
        //                     <td>${userEmail}</td>
        //                     <td>${new Date(app.appliedDate).toLocaleDateString() || 'N/A'}</td>
        //                 </tr>`;
        //                 applicationsTableBody.innerHTML += row;
        //             });
        //         } catch (error) {
        //             console.error('Error fetching dashboard data:', error);
        //             alert('There was an error loading the dashboard data. Please try again later.');
        //         }
        //     }

        //     document.getElementById('postJobForm').addEventListener('submit', async function (event) {
        //         event.preventDefault();

        //         const jobTitle = document.getElementById('jobTitle').value.trim();
        //         const jobLocation = document.getElementById('jobLocation').value.trim();
        //         const jobDescription = document.getElementById('jobDescription').value.trim();
        //         const companyId = document.getElementById('companyId').value.trim();

        //         // Validate form inputs
        //         if (!jobTitle || !jobLocation || !jobDescription) {
        //             alert('Please fill out all required fields.');
        //             return;
        //         }

        //         try {
        //             const response = await fetch('/api/job', {
        //                 method: 'POST',
        //                 headers: {
        //                     'Content-Type': 'application/json'
        //                 },
        //                 body: JSON.stringify({
        //                     title: jobTitle,
        //                     location: jobLocation,
        //                     description: jobDescription,
        //                     companyId: companyId
        //                 })
        //             });
                     
        //             // Check if the response is in JSON format
        //             const contentType = response.headers.get('Content-Type');
        //             if (!contentType || !contentType.includes('application/json')) {
        //                 const errorText = await response.text(); // Read response as text if not JSON
        //                 throw new Error(`Unexpected response format: ${errorText}`);
        //             }

        //             // Parse JSON response
        //             const result = await response.json();
        //             if (!response.ok) {
        //                 throw new Error(result.message || 'Failed to post job');
        //             }

        //             alert(result.message);
        //             document.getElementById('postJobForm').reset();
        //             fetchCompanyDashboard(); // Refresh dashboard data
        //         } catch (error) {
        //             console.error('Error posting job:', error);
        //             alert(error.message || 'An unexpected error occurred.');
        //         }
        //     });
        // });
        document.addEventListener('DOMContentLoaded', function () {
            // Fetch and populate dashboard data on page load
            fetchCompanyDashboard();

            async function fetchCompanyDashboard() {
                try {
                    const response = await fetch('/api/company/dashboard');
                    if (!response.ok) {
                        throw new Error('Failed to fetch dashboard data');
                    }
                    const data = await response.json();

                    // Validate data
                    if (!data || !data.company || !Array.isArray(data.jobs) || !Array.isArray(data.applications) || !Array.isArray(data.users)) {
                        throw new Error('Invalid data structure');
                    }

                    // Populate Company Information
                    document.getElementById('companyIdDisplay').textContent = data.company.id || 'N/A';
                    document.getElementById('companyName').textContent = data.company.name || 'N/A';
                    document.getElementById('companyAddress').textContent = data.company.address || 'N/A';
                    document.getElementById('companyWebsite').textContent = data.company.website || 'N/A';

                    // Populate Jobs Table
                    const jobsTableBody = document.getElementById('jobsTableBody');
                    jobsTableBody.innerHTML = '';
                    data.jobs.forEach(job => {
                        const row = `<tr>
                            <td>${job.title || 'N/A'}</td>
                            <td>${job.location || 'N/A'}</td>
                            <td>${new Date(job.postedDate).toLocaleDateString() || 'N/A'}</td>
                        </tr>`;
                        jobsTableBody.innerHTML += row;
                    });

                    // Populate Applications Table
                    const applicationsTableBody = document.getElementById('applicationsTableBody');
                    applicationsTableBody.innerHTML = '';
                    data.applications.forEach(app => {
                        const jobTitle = data.jobs.find(job => job.id === app.jobId)?.title || 'Unknown';
                        const userEmail = data.users.find(user => user.id === app.userId)?.email || 'Unknown';
                        const row = `<tr>
                            <td>${jobTitle}</td>
                            <td>${userEmail}</td>
                            <td>${new Date(app.appliedDate).toLocaleDateString() || 'N/A'}</td>
                        </tr>`;
                        applicationsTableBody.innerHTML += row;
                    });
                } catch (error) {
                    console.error('Error fetching dashboard data:', error);
                    alert('There was an error loading the dashboard data. Please try again later.');
                }
            }

            document.getElementById('postJobForm').addEventListener('submit', async function (event) {
                event.preventDefault();

                const companyId = document.getElementById('companyIdInput').value.trim();
                const jobTitle = document.getElementById('jobTitle').value.trim();
                const jobLocation = document.getElementById('jobLocation').value.trim();
                const jobDescription = document.getElementById('jobDescription').value.trim();

                // Validate form inputs
                if (!companyId || !jobTitle || !jobLocation || !jobDescription) {
                    alert('Please fill out all required fields.');
                    return;
                }

                try {
                    const response = await fetch('/api/job', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            title: jobTitle,
                            location: jobLocation,
                            description: jobDescription,
                            companyId: companyId
                        })
                    });

                    // Check if the response is in JSON format
                    const contentType = response.headers.get('Content-Type');
                    if (!contentType || !contentType.includes('application/json')) {
                        const errorText = await response.text(); // Read response as text if not JSON
                        throw new Error(`Unexpected response format: ${errorText}`);
                    }

                    // Parse JSON response
                    const result = await response.json();
                    if (!response.ok) {
                        throw new Error(result.message || 'Failed to post job');
                    }

                    alert(result.message);
                    document.getElementById('postJobForm').reset();
                    fetchCompanyDashboard(); // Refresh dashboard data
                } catch (error) {
                    console.error('Error posting job:', error);
                    alert(error.message || 'An unexpected error occurred.');
                }
            });
        });

    </script>
</body>
</html>
